function detect(){var e
if(PE.isDll())return(e=PE.isLibraryPresentExp(/perl(5)_?(\d\d*)/i))&&(bDetected=!0,sVersion=e[1]+"."+e[2],sLang="Perl"),PE.isExportFunctionPresentExp("Perl_sv_bless|perl_parse")?(bDetected=!0,sVersion=getPerlVersion(),sLang="Perl",_setResult("library","Perl Runtime",sVersion,"")):result()}function getPerlVersion(){for(var e=["'erl5' %% '.dll'","'erl5' %% %% '.dll'","'erl5_' %% '.dll'","'erl5_' %% %% '.dll'"],r=PE.getExportSection(),t=String(),n=-1,i=0;i<e.length&&!(-1<(n=PE.findSignature(PE.section[r].FileOffset,PE.getSize(),e[i])));++i);if(0<n){var l=PE.getString(n,12)
if(!(l=l.match(/(5)_?(\d\d*)/)))return t
t=l[1]+"."+l[2],l=findPatchVersion(9<Number(l[2])?"'5.' %% %% '.' %% ":"'5.' %% '.' %%")
0<l&&(t+="."+l)}return t}function findPatchVersion(e){for(var r,t=0,n=PE.getSize(),i=0;-1!=(r=PE.findSignature(t,n,e));){var l=PE.getString(r,12),t=r+l.length;(l=l.match(/5\.\d\d*\.(\d\d*)/))&&l[1]>i&&(i=l[1])}return i}meta("library","Perl5 xs")
